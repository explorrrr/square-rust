//! Card

use serde::{Deserialize, Serialize};

use crate::api::models::enums::versions::v20230925::card_brand::CardBrandV20230925;
use crate::api::models::enums::versions::v20230925::card_co_brand::CardCoBrandV20230925;
use crate::api::models::enums::versions::v20230925::card_prepaid_type::CardPrepaidTypeV20230925;
use crate::api::models::enums::versions::v20230925::card_type::CardTypeV20230925;
use crate::api::models::objects::versions::v20230925::address::AddressV20230925;

/// Represents the payment details of a card to be used for payments.
/// These details are determined by the payment token generated by Web Payments SDK.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CardV20230925 {
    /// Read only Unique ID for this card. Generated by Square.
    /// Max Length 64
    pub id: Option<String>,
    /// Read only The card's brand.
    pub card_brand: Option<CardBrandV20230925>,
    /// Read only The last 4 digits of the card number.
    /// Max Length 4
    pub last_4: Option<String>,
    /// The expiration month of the associated card as an integer between 1 and 12.
    pub exp_month: Option<i64>,
    /// The four-digit year of the card's expiration date.
    pub exp_year: Option<i64>,
    /// The name of the cardholder.
    /// Max Length 96
    pub cardholder_name: Option<String>,
    /// The billing address for this card.
    pub billing_address: Option<AddressV20230925>,
    /// Read only Intended as a Square-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.
    /// Max Length 255
    pub fingerprint: Option<String>,
    /// Required The ID of a customer created using the Customers API to be associated with the card.
    pub customer_id: Option<String>,
    /// Read only The ID of the merchant associated with the card.
    /// Max Length 64
    pub merchant_id: Option<String>,
    /// An optional user-defined reference ID that associates this card with another entity in an external system. For example, a customer ID from an external customer management system.
    /// Max Length 128
    pub reference_id: Option<String>,
    /// Read only Indicates whether or not a card can be used for payments.
    pub enabled: Option<bool>,
    /// Read only The type of the card. The Card object includes this field only in response to Payments API calls.
    pub card_type: Option<CardTypeV20230925>,
    /// Read only Indicates whether the Card is prepaid or not. The Card object includes this field only in response to Payments API calls.
    pub prepaid_type: Option<CardPrepaidTypeV20230925>,
    /// Read only The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API returns this field.
    /// Max Length 6
    pub bin: Option<String>,
    /// Current version number of the card. Increments with each card update. Requests to update an existing Card object will be rejected
    /// unless the version in the request matches the current version for the Card.
    pub version: Option<i64>,
    /// Read only The card's co-brand if available. For example, an Afterpay virtual card would have a co-brand of AFTERPAY.
    pub card_co_brand: Option<CardCoBrandV20230925>,
}
